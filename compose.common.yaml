services:
  app:
    build:
      context: .
    ports:
      - '${HOST_PORT:-4000}:4000'
    environment:
      - PORT=4000
      - JWT_SECRET=${JWT_SECRET}
      - SENTRY_DSN=${SENTRY_DSN}
      - FRONTEND_URL=${FRONTEND_URL}
      - DIRECT_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT:-5432}/postgres?schema=public
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT:-5432}/postgres?schema=public
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - VALID_ORIGINS=${VALID_ORIGINS}
      - STORAGE_BUCKET=${STORAGE_BUCKET}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - MIDTRANS_CLIENT_KEY=${MIDTRANS_CLIENT_KEY}
      - MIDTRANS_SERVER_KEY=${MIDTRANS_SERVER_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
    volumes:
      - '${GOOGLE_APPLICATION_CREDENTIALS}:/app/credentials.json:ro'
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d postgres']
      interval: 5s
      retries: 5
      start_period: 30s
      timeout: 10s
