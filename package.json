{
  "name": "tiketku-backend",
  "version": "1.0.0",
  "main": "./src/index.js",
  "type": "module",
  "scripts": {
    "dev": "cross-env NODE_ENV=development concurrently npm:watch npm:mjml:watch",
    "watch": "nodemon -L --no-warnings=ExperimentalWarning ./src/index.js",
    "start": "cross-env NODE_ENV=production node --no-warnings=ExperimentalWarning --import ./build/src/instrument.js ./build/src/index.js",
    "start:docker": "cross-env NODE_ENV=production node --no-warnings=ExperimentalWarning --import ./src/instrument.js ./src/index.js",
    "start:compile": "npm run build && npm run start",
    "build": "npm run mjml:compile && copyfiles \"./src/**/*.html\" \"./build\" && npm run db:generate && tsc",
    "type-check": "tsc --noEmit",
    "lint": "eslint --max-warnings 0 .",
    "lint:fix": "eslint --fix .",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "cross-env CI=true node --no-warnings --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:watch": "cross-env CI=true node --no-warnings --experimental-vm-modules node_modules/jest/bin/jest.js --watchAll",
    "test:coverage": "cross-env CI=true node --no-warnings --experimental-vm-modules node_modules/jest/bin/jest.js --coverage",
    "mjml:watch": "mjml -w ./src/utils/emails/templates/*.mjml -o ./src/utils/emails/build",
    "mjml:compile": "mjml ./src/utils/emails/templates/*.mjml -o ./src/utils/emails/build",
    "openapi:generate": "dotenv -e .env.local -- node ./src/scripts/openapi.js",
    "openapi:generate:commit": "npm run openapi:generate && git add ./src/docs/openapi.json",
    "db:seed": "dotenv -e .env.local -- prisma db seed",
    "db:push": "dotenv -e .env.local -- prisma db push",
    "db:watch": "dotenv -e .env.local -- prisma generate --sql --watch",
    "db:reset": "dotenv -e .env.local -- prisma migrate reset --force",
    "db:studio": "dotenv -e .env.local -- prisma studio",
    "db:deploy": "dotenv -e .env.local -- prisma migrate deploy",
    "db:migrate": "dotenv -e .env.local -- prisma migrate dev",
    "db:generate": "dotenv -e .env.local -- prisma generate --sql --no-hints",
    "db:migrate:create-only": "dotenv -e .env.local -- prisma migrate dev --create-only",
    "prepare": "husky || true"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "@prisma/client": "^6.1.0",
    "@sentry/node": "^8.38.0",
    "@sentry/profiling-node": "^8.38.0",
    "bcrypt": "^5.1.1",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "dotenv-cli": "^7.4.2",
    "express": "^5.0.1",
    "firebase-admin": "^13.0.1",
    "handlebars": "^4.7.8",
    "jsonwebtoken": "^9.0.2",
    "midtrans-client": "^1.4.2",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.16",
    "nodemon": "^3.1.7",
    "pino": "^9.5.0",
    "pino-http": "^10.3.0",
    "pino-pretty": "^11.3.0",
    "socket.io": "^4.8.1",
    "swagger-ui-express": "^5.0.1",
    "validator": "^13.12.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.5.0",
    "@commitlint/config-conventional": "^19.5.0",
    "@eslint/js": "^9.13.0",
    "@faker-js/faker": "^9.2.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/eslint__js": "^8.42.3",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/multer": "^1.4.12",
    "@types/nodemailer": "^6.4.16",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/validator": "^13.12.2",
    "concurrently": "^9.1.0",
    "copyfiles": "^2.4.1",
    "eslint": "^9.13.0",
    "eslint-plugin-jsdoc": "^50.4.3",
    "globals": "^15.11.0",
    "husky": "^9.1.6",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.10",
    "mjml": "^4.15.3",
    "postman2openapi": "^1.2.1",
    "prettier": "^3.3.3",
    "prettier-plugin-jsdoc": "^1.3.0",
    "prisma": "^6.1.0",
    "typescript": "^5.6.3"
  },
  "prisma": {
    "seed": "node src/utils/prisma/seed/seed.js",
    "schema": "src/utils/prisma/schema"
  },
  "volta": {
    "node": "20.18.0"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  }
}
